{"version":3,"sources":["img/laptop.jpg","App.js","Cart.js","serviceWorker.js","index.js"],"names":["module","exports","App","React","Component","props","state","updateCart","bind","changeFilter","event","this","setState","cart","alert","className","cartprop","filterProp","items","map","dynamicComponent","i","key","componentData","Header","Filters","type","min","max","value","id","Content","src","require","alt","name","price","display","actual","discount","onClick","MySort","Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2fd3a7b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/laptop.02ed288f.jpg\";","import React from 'react';\nimport ReacDOM from 'react-dom';\nimport { Router, Route, Link, browserHistory, IndexRoute, Switch } from 'react-router-dom';\nimport './App.css';\nimport Cart from './Cart';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\"items\":[{\"name\":\"item 1\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 2\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 3\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 4\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 5\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 6\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 7\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 8\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 9\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 10\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 11\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 12\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 13\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64},{\"name\":\"item 14\",\"price\":{\"actual\":319,\"display\":900},\"discount\":64}],\n                  \"cart\":0\n                 };\n    this.updateCart = this.updateCart.bind(this);\n    this.changeFilter = this.changeFilter.bind(this);\n  };\n  updateCart(event){\n    this.setState({cart: this.state.cart+1});\n  }\n  changeFilter()\n  {\n    alert('123');\n  }\n  render(){\n    return(\n      <div className=\"flex-container\">\n        <Header cartprop={this.state.cart} />\n        <div className=\"innerWrap\">\n            <Filters filterProp={this.changeFilter}/> \n            <div className=\"RootCart\">\n              <MySort />\n                {this.state.items.map((dynamicComponent, i) => <Content \n                          key = {i} componentData = {dynamicComponent}  updateCart={this.updateCart}/>)}\n            </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\n\nclass Header extends React.Component{\n  render(){\n    return(\n      <div className=\"header\">\n        <span><i className=\"fa fa-search\"></i></span>\n        <span><i className=\"fa fa-shopping-cart\"></i>\n                  &nbsp;\n                  <b>{this.props.cartprop}</b></span>  \n      </div>\n    )\n  }\n}\n\n\nclass Filters extends React.Component{\n  render(){\n    return(\n      <div className=\"filters\">\n        <h3>Filters</h3>\n        <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" className=\"slider\" id=\"myRange\"></input>\n        <p>Value: <span id=\"demo\"></span></p>\n        <button className=\"btn_a\">Apply</button>\n      </div>\n    )\n  }\n}\n\nclass Content extends React.Component {\n  render() {\n     return (\n        <div className=\"Cart_content\">\n          <div className=\"item_img\"><img src={require('./img/laptop.jpg')} alt=\"Item\"/></div>\n           <div>{this.props.componentData.name}</div>\n           <div>\n             <b>&#8377; {this.props.componentData.price.display}</b>&nbsp;\n             <strike>{this.props.componentData.price.actual}</strike>&nbsp;\n             <span>{this.props.componentData.discount}% off</span>\n           </div>\n           \n           <button className=\"btn\" onClick={this.props.updateCart}>Add to cart</button>\n        </div>\n     );\n  }\n}\n\nclass MySort extends React.Component{\n  render(){\n    return(\n      <div className=\"sorting\">\n        <h4>Sort By</h4>\n        <ul>\n          <li>Price--High Low</li>\n          <li>Price--Low High</li>\n          <li>Discount</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nclass Footer extends React.Component{\n  render(){\n    return(\n      <div className=\"footer\">\n       &copy;Copyright\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nclass Cart extends React.Component{\r\n    render(){\r\n        return(\r\n            <h1>Cart</h1>\r\n        );\r\n    }\r\n}\r\nexport default Cart;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}